#!/bin/bash

# configure -- configure CHB for build
#
# Copyright (C) 2021 - 2025 andres26
#
# This file is distributed under the terms of the MIT license.
#

export prog_name=$0

_help() {
	echo "$prog_name -- config CHB script"
	echo "usage: $prog_name (first) (second)"
	echo "first argument: target prefix"
	echo "second argument: host prefix"
	exit 0
}

configure_warning() {
	echo "configure warning: $1"
}

configure_info() {
	echo "configure info: $1"
}

if [ -z $1 ]; then
	configure_warning "target is not specified, using default toolchain"
elif [ $1 == "help" ]; then
	_help;
fi

export host=$2
export HOST_CFLAGS='-Wall -Werror -Wextra'
export HOST_LDFLAGS=

# test if host is empty
if [ -z $host ]; then
	export HOST_CC=gcc
	export HOST_LD=ld
	export HOST_AS=gcc
	export HOST_OBJCOPY=objcopy
	export HOST_OBJDUMP=objdump
	export HOST_AR=ar 
	export HOST_NM=nm
else
	export HOST_CC=$target-gcc
	export HOST_LD=$target-ld
	export HOST_AS=$target-gcc
	export HOST_OBJCOPY=$target-objcopy
	export HOST_OBJDUMP=$target-objdump
	export HOST_AR=$target-ar 
	export HOST_NM=$target-nm 
fi

# in x86_64 machines force 32 bit mode, CHB doesn't support long mode
export target=$1
target_cpu=
TARGET_CFLAGS=
TARGET_LDFLAGS=
case $target in
  i[X]86*)
    export target_cpu=i386
	export TARGET_CFLAGS='-FPIC -ffreestanding -fno-exceptions -mno-red-zone -nodefaultlibs -nostdlib -Wall -Werror -Wextra'
  ;;
  x86_64*)
	export target_cpu=x86_64
	export TARGET_CFLAGS='-FPIC -m32 -ffreestanding -fno-exceptions -mno-red-zone -nodefaultlibs -nostdlib -Wall -Werror -Wextra'
	export TARGET_LDFLAGS='-melf_i386'
  ;;
  *)
	export target_cpu=
	export TARGET_CFLAGS='-FPIC -ffreestanding -fno-exceptions -mno-red-zone -nodefaultlibs -nostdlib -Wall -Werror -Wextra'
	export TARGET_LDFLAGS='-melf_i386'
  ;;
esac

configure_info "target cpu= $target_cpu; CFLAGS= $target_cflags; LDFLAGS= $target_ldflags"

# test if target is empty 
if [ -z $target ]; then
	export TARGET_CC=gcc
	export TARGET_LD=ld
	export TARGET_AS=gcc
	export TARGET_OBJCOPY=objcopy
	export TARGET_OBJDUMP=objdump
	export TARGET_AR=ar 
	export TARGET_NM=nm
else
	export TARGET_CC=$target-gcc
	export TARGET_LD=$target-ld
	export TARGET_AS=$target-gcc
	export TARGET_OBJCOPY=$target-objcopy
	export TARGET_OBJDUMP=$target-objdump
	export TARGET_AR=$target-ar 
	export TARGET_NM=$target-nm 
fi

export MAKE=make

configure_info "exported host: $host"
configure_info "exported target: $target"
configure_info "exported gcc: $TARGET_CC"
configure_info "exported ld: $TARGET_LD"
configure_info "exported as: $TARGET_AS"
configure_info "exported objcopy: $TARGET_OBJCOPY"
configure_info "exported objdump: $TARGET_OBJDUMP"
configure_info "exported ar: $TARGET_AR"
configure_info "exported mn: $TARGET_NM"
configure_info "exported MAKE command: $MAKE"
configure_info "configure finished!"
